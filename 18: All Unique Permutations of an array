Qn: https://www.geeksforgeeks.org/problems/all-unique-permutations-of-an-array/0

class Solution {
  public:
  void permute(vector<int> &arr,vector<int> &curr,vector<vector<int>> &ans,vector<bool> &visited)
  {
      if(curr.size()==arr.size())
      {
          ans.push_back(curr);
      }
      for(int i=0;i<arr.size();i++)
      {
          if(visited[i])
          continue;
          if(i>0 && arr[i]==arr[i-1] && !visited[i-1])
          continue;
          
          visited[i]=true;
          
          curr.push_back(arr[i]);
          
          permute(arr,curr,ans,visited);
          
          visited[i]=false;
          
          curr.pop_back();
      }
  }
  vector<vector<int>> permutations(vector<int>& arr)
  {
      sort(arr.begin(),arr.end());
      
      vector<vector<int>> ans;
      vector<bool> visited(arr.size(),false);
      
      vector<int> curr;
      permute(arr,curr,ans,visited);
      
      return ans;
  }
    vector<vector<int>> uniquePerms(vector<int> &arr ,int n) {
        // code here
        return permutations(arr);
        //return ans;
    }
};

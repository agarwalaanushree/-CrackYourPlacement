Qn: https://leetcode.com/problems/reverse-pairs/description/

class Solution {
public:
int mergeSort(vector<int>& nums,int l,int h){
    if(l>=h)
    return 0;
    int mid=(l+h)/2;
    int ans=0;
    ans+=mergeSort(nums,l,mid);
    ans+=mergeSort(nums,mid+1,h);
    ans+=merge(nums,l,mid,h);
    return ans;
}

int merge(vector<int>& nums,int l,int mid,int h)
{
    int left=l,right=mid+1,ans=0;
    while(left<=mid && right<=h)
    {
        if(nums[left]>(1ll*2*nums[right])){
            ans+=mid-left+1;
            right++;
        }else{
            left++;
        }
    }
    sort(nums.begin()+l,nums.begin()+h+1);
    return ans;
}
    int reversePairs(vector<int>& nums) {
        int n=nums.size();
        return mergeSort(nums,0,n-1);
    }
};

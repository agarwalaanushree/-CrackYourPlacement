Qn: https://leetcode.com/problems/maximal-rectangle/description/

class Solution {
public:
int maxHist(vector<int>& arr)
{
    int n=arr.size();
    int maxarea=0;
    stack<int> st;
    for(int i=0;i<=n;i++){
        while(!st.empty() && (i==n || arr[st.top()]>=arr[i])){
            int height=arr[st.top()];
            st.pop();
            int width;
            if(st.empty())
            width=i;
            else
            width=i-st.top()-1;
            maxarea=max(maxarea,(height*width));
        }
        st.push(i);
    }

    return maxarea;
}
    int maximalRectangle(vector<vector<char>>& matrix) {
        int r=matrix.size();
        if(r==0)
        return 0;
        int c=matrix[0].size();
        int res=0;
        vector<int> temp(c,0);
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                if(matrix[i][j]=='1')
                temp[j]+=1;
                else
                temp[j]=0;
            }
            res=max(res,maxHist(temp));
        }

        return res;
    }
};

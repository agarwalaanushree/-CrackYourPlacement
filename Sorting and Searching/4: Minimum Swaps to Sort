Qn: https://www.geeksforgeeks.org/problems/minimum-swaps/1

class Solution 
{
    public:
    //Function to find the minimum number of swaps required to sort the array. 
	int minSwaps(vector<int>&nums)
	{
	    // Code here
	    int n=nums.size();
	    int ans=0;
	    unordered_map<int,int> mp;
	    for(int i=0;i<n;i++)
	    mp[nums[i]]=i;
	    
	    sort(nums.begin(),nums.end());
	    
	    vector<bool> visited(n,false);
	    
	    for(int i=0;i<n;i++)
	    {
	        if(visited[i] || mp[nums[i]]==i)
	        continue;
	        
	        int j=i,cycle=0;
	        while(!visited[j]){
	            visited[j]=true;
	            j=mp[nums[j]];
	            cycle++;
	        }
	        
	        if(cycle>0)
	        ans+=cycle-1;
	    }
	    return ans;
	}
};

Qn: https://leetcode.com/problems/split-array-largest-sum/description/

class Solution {
public:
bool func(vector<int>& nums,int k,int mxsum)
{
    int currSum=0,split=1;
    for(int num:nums)
    {
        if(currSum+num>mxsum){
            currSum=num;
            split++;
            if(split>k)
            return false;
        }else{
            currSum+=num;
        }
    }

    return true;
}
    int splitArray(vector<int>& nums, int k) {
        int low=*max_element(nums.begin(),nums.end());
        int high=accumulate(nums.begin(),nums.end(),0);

        while(low<high){
            int mid=low+(high-low)/2;
            if(func(nums,k,mid))
            high=mid;
            else
            low=mid+1;
        }

        return low;
    }
};

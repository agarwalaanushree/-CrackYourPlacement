Qn: https://leetcode.com/problems/validate-binary-search-tree/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
bool func(TreeNode* root,long long min,long long max)
{
    if(root==NULL)
    return true;

    if(root->val>min && root->val<max)
    {
        bool isLeft=func(root->left,min,root->val);
        bool isRight=func(root->right,root->val,max);

        return isLeft && isRight;
    }
    else
    return false;
}
    bool isValidBST(TreeNode* root) {
        return func(root,-2147483657,2147483657);
    }
};

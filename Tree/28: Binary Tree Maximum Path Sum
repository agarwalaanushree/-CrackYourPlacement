Qn: https://leetcode.com/problems/binary-tree-maximum-path-sum/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int func(TreeNode* root,int& res)
{
    if(root==NULL)
    return 0;

    int leftAns=func(root->left,res);
    int rightAns=func(root->right,res);

    int temp=max(leftAns,rightAns)+root->val;
    int mx=max(temp,root->val);

    int mx_tp=max(mx,leftAns+rightAns+root->val);
    res=max(res,mx_tp);

    return mx;

}
    int maxPathSum(TreeNode* root) {
        int res=INT_MIN;
        func(root,res);
        return res;
    }
};

Qn: https://www.geeksforgeeks.org/problems/preorder-to-postorder4423/1

class Solution {
  public:
  Node* func(int pre[],int* preIndx,int low,int high,int size)
  {
      if(*preIndx>=size || low>high)
      return NULL;
      
      Node* root=newNode(pre[*preIndx]);
      *preIndx=*preIndx+1;
      
      if(low==high)
      return root;
      
      int i;
      for(i=low;i<=high;i++){
          if(pre[i]>root->data)
          break;
      }
      root->left=func(pre,preIndx,*preIndx,i-1,size);
      root->right=func(pre,preIndx,i,high,size);
      
      return root;
  }
    // Function that constructs BST from its preorder traversal.
    Node* Bst(int pre[], int size) {
        // code here
        int preIndx=0;
        return func(pre,&preIndx,0,size-1,size);
    }
};

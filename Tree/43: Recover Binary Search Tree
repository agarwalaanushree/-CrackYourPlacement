Qn: https://leetcode.com/problems/recover-binary-search-tree/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
TreeNode* first=nullptr;
TreeNode* second=nullptr;
TreeNode* pre=nullptr;

void inorder(TreeNode* root)
{
    if(root==NULL)
    return;

    inorder(root->left);

    if(first==nullptr && root->val<pre->val)
    first=pre;

    if(first!=nullptr && root->val<pre->val)
    second=root;

    pre=root;
    
    inorder(root->right);
}
    void recoverTree(TreeNode* root) {
        pre=new TreeNode(INT_MIN);
        inorder(root);
        swap(first->val,second->val);
    }
};

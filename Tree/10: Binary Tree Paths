Qn: https://leetcode.com/problems/binary-tree-paths/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
void func(TreeNode* root,string s,vector<string>& ans)
{
    if(root==NULL)
    return;
    string t=to_string(root->val);
    if(root->left==NULL && root->right==NULL){
        s+=t;
        ans.push_back(s);
        return;
    }

    func(root->left,s+t+"->",ans);
    func(root->right,s+t+"->",ans);
}
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> ans;
        func(root,"",ans);
        return ans;
    }
};

Qn: https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/description/

/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* prev;
    Node* next;
    Node* child;
};
*/

class Solution {
public:
    Node* flatten(Node* head) {
        Node* temp=head;
        while(temp!=NULL)
        {
            Node* temp1=temp->next;
            while(temp->child!=NULL)
            {
                Node* curr=temp->child;
                temp->child=NULL;
                curr=flatten(curr);
                temp->next=curr;
                curr->prev=temp;
                while(curr->next!=NULL)
                curr=curr->next;
                curr->next=temp1;
                if(temp1)
                temp1->prev=curr;
            }

            temp=temp1;
        }
        return head;
    }
};

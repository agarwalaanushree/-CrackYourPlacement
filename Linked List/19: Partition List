Qn: https://leetcode.com/problems/partition-list/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* less=NULL;
        ListNode* next1=NULL;
        ListNode* greater=NULL;
        ListNode* next2=NULL;

        ListNode* temp=head;
        while(temp){
            ListNode* node=new ListNode(temp->val);
            if(temp->val<x){
                if(!less){
                    less=node;
                    next1=less;
                }else{
                    next1->next=node;
                    next1=next1->next;
                }
            }else{
                if(!greater){
                    greater=node;
                    next2=greater;
                }else{
                    next2->next=node;
                    next2=next2->next;
                }
            }

            temp=temp->next;
        }
        if(!less)
        return greater;

        next1->next=greater;
        return less;
    }
};

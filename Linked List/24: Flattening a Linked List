Qn: https://www.geeksforgeeks.org/problems/flattening-a-linked-list/1

/* Node structure  used in the program

struct Node{
    int data;
    struct Node * next;
    struct Node * bottom;

    Node(int x){
        data = x;
        next = NULL;
        bottom = NULL;
    }

};
*/

class Solution {
  public:
  
  Node* merge(Node* a,Node* b){
      if(a==NULL)
      return b;
      if(b==NULL)
      return a;
      
      Node* ans;
      if(a->data < b->data){
          ans=a;
          ans->bottom=merge(a->bottom,b);
      }
      else{
          ans=b;
          ans->bottom=merge(a,b->bottom);
      }
      
      ans->next=NULL;
      
      return ans;
  }
    // Function which returns the  root of the flattened linked list.
    Node *flatten(Node *root) {
        // Your code here
        if(root==NULL || root->next==NULL)
        return root;
        
        root->next=flatten(root->next);
        root=merge(root,root->next);
        
        return root;
    }
};

Qn: https://leetcode.com/problems/palindrome-linked-list/description/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        ListNode* temp=head;
        vector<ListNode*> vec;
        while(temp!=NULL){
            vec.push_back(temp);
            temp=temp->next;
        }

        int n=vec.size()-1;
        for(int i=0;i<vec.size()/2;i++){
            if(vec[i]->val != vec[n]->val)
            return false;
            n--;
        }
        return true;


    }
};
